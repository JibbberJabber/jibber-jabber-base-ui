server {
    listen 80;
    listen [::]:80;

    server_name jbbrjbbr2202.store;
    server_tokens off;


    location / {
            return 301 https://jbbrjbbr2202.store$request_uri;
        }
}

server {

    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name jbbrjbbr2202.store;

    ssl_certificate /etc/letsencrypt/live/jbbrjbbr2202.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jbbrjbbr2202.store/privkey.pem;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    add_header Host $host; # to forward the original host requested by the client
    location / {
        root /usr/share/nginx/html;
    }

    location /follows/ {
        proxy_pass http://follow-api:8080/follows/;
    }

    location /posts/ {
        proxy_set_header Host $host; # to forward the original host requested by the client
        proxy_pass http://posts-api:8083/posts/;
    }


    location /auth/ {
        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host; # to forward the original host requested by the client
        proxy_pass http://keycloak:8080/auth/;
    }

    location /admin {
            proxy_pass http://keycloak:8080/;
        }

    location /admin/* {
            proxy_pass http://keycloak:8080/;
        }
}